{"version":3,"sources":["../src/pug.js"],"names":["addGameType","Pugs","_","gameName","noPlayers","noTeams","uid","isNaN","status","msg","discriminator","toLowerCase","pickingOrder","parseInt","newGameType","API","pushToDB","result","console","log","delGameType","args","deleteFromDB","joinGameType","user","PugList","map","game","g","joinStatus","pugProps","pug","Pug","addPlayer","activeCount","list","length","error","leaveGameType","action","p","playerIndex","findPlayer","removePlayer","listAvailablePugs","forGame","picking","withList","captains","team","findIndex","u","id","push","fillPug","index","splice"],"mappings":"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","file":"pug.js","sourcesContent":["import API from './api';\nimport { getPickingOrder } from './helpers';\nimport cloneDeep from 'lodash/cloneDeep';\n\nexport const addGameType = async (\n  [_, gameName, noPlayers, noTeams, uid],\n  Pugs\n) => {\n  try {\n    if (isNaN(noPlayers) || isNaN(noTeams) || !gameName || !uid)\n      return { status: false, msg: 'Invalid command' };\n\n    const discriminator = uid.toLowerCase();\n    if (Pugs[discriminator])\n      return { status: false, msg: 'Gametype already exists' };\n\n    const pickingOrder = getPickingOrder(\n      parseInt(noPlayers),\n      parseInt(noTeams)\n    );\n\n    if (!pickingOrder)\n      return { status: false, msg: 'Invalid No. of players/teams' };\n\n    const newGameType = {\n      gameName,\n      noPlayers,\n      noTeams,\n      pickingOrder,\n      discriminator,\n    };\n\n    const result = await API.pushToDB('/Pugs', discriminator, newGameType);\n    return { ...result, msg: 'Gametype added' };\n  } catch (error) {\n    console.log(error);\n    return { status: false, msg: 'Something went wrong' };\n  }\n};\n\nexport const delGameType = async ([_, discriminator, ...args], Pugs) => {\n  //TODO: To remove existing references of this game type(?)\n  try {\n    if (!Pugs[discriminator])\n      return { status: false, msg: \"Gametype doesn't exist\" };\n\n    const result = await API.deleteFromDB('/Pugs', discriminator);\n    return { ...result, msg: 'Gametype removed' };\n  } catch (error) {\n    console.log(error);\n    return { status: false, msg: 'Something went wrong' };\n  }\n};\n\nexport const joinGameType = ([_, ...args], user, Pugs, PugList) => {\n  try {\n    const result = args.map(g => {\n      const game = g.toLowerCase(); // game is basically the discriminator\n\n      if (!Pugs[game]) return { user, discriminator: game, joinStatus: -1 };\n\n      const pugProps = Pugs[game];\n      const pug = !PugList[game] ? new Pug(pugProps) : cloneDeep(PugList[game]);\n      const joinStatus = pug.addPlayer(user);\n      return {\n        pug,\n        user,\n        discriminator: pug.discriminator,\n        noPlayers: pug.noPlayers,\n        activeCount: pug.list.length,\n        joinStatus,\n      };\n    });\n    return { status: true, result };\n  } catch (error) {\n    console.log(error);\n    return { status: false, msg: 'Something went wrong' };\n  }\n};\n\nexport const leaveGameType = ([action, ...args], user, Pugs, PugList) => {\n  try {\n    if (action === 'lva') {\n      const result = Object.values(PugList).map(p => {\n        const pug = cloneDeep(p);\n        const playerIndex = pug.findPlayer(user);\n        if (playerIndex > -1) {\n          pug.removePlayer(playerIndex);\n          return { pug, user, discriminator: pug.discriminator };\n        }\n        return {};\n      });\n      return { status: true, result };\n    } else {\n      const result = args.map(g => {\n        const game = g.toLowerCase(); // game is basically the discriminator\n\n        if (!Pugs[game]) return {};\n        const pug = PugList[game] ? cloneDeep(PugList[game]) : null;\n        if (!pug) return {};\n\n        const playerIndex = pug.findPlayer(user);\n        if (playerIndex > -1) {\n          pug.removePlayer(playerIndex);\n          return { pug, user, discriminator: pug.discriminator };\n        }\n        return {};\n      });\n      return { status: true, result };\n    }\n  } catch (error) {\n    console.log(error);\n    return { status: false, msg: 'Something went wrong' };\n  }\n};\n\n// TODO: Use constants for commands for better DX and maybe separate them in methods\nexport const listAvailablePugs = ([action, forGame, ...args], PugList) => {\n  try {\n    if (action === 'lsa') {\n      const result = Object.values(PugList).map(p => ({\n        discriminator: p.discriminator,\n        noPlayers: p.noPlayers,\n        list: [...p.list],\n        picking: p.picking,\n        withList: true,\n      }));\n      return { status: true, result };\n    } else {\n      if (!forGame) {\n        const result = Object.values(PugList).map(p => ({\n          discriminator: p.discriminator,\n          noPlayers: p.noPlayers,\n          list: [...p.list],\n          picking: p.picking,\n          withList: false,\n        }));\n        return { status: true, result };\n      }\n\n      const game = forGame.toLowerCase(); // game is basically the discriminator\n      if (!PugList[game]) return null;\n      const pug = PugList[game];\n      const result = [\n        {\n          discriminator: pug.discriminator,\n          noPlayers: pug.noPlayers,\n          list: [...pug.list],\n          picking: pug.picking,\n          withList: true,\n        },\n      ];\n      return { status: true, result };\n    }\n  } catch (error) {\n    console.log(error);\n    return { status: false, msg: 'Something went wrong' };\n  }\n};\n\nexport class Pug {\n  constructor({ discriminator, gameName, noPlayers, noTeams, pickingOrder }) {\n    this.discriminator = discriminator;\n    this.gameName = gameName;\n    this.noPlayers = noPlayers;\n    this.noTeams = noTeams;\n    this.pickingOrder = pickingOrder;\n    this.picking = false;\n    this.list = [];\n    this.captains = [];\n    this.team = {};\n  }\n\n  fillPug() {\n    this.picking = true;\n  }\n\n  addPlayer(user) {\n    if (!this.picking) {\n      if (this.list.findIndex(u => u.id === user.id) > -1) return 2;\n      this.list.push({ team: null, ...user });\n      this.list.length === this.noPlayers ? this.fillPug() : null;\n      return 1;\n    }\n    return 0;\n  }\n\n  removePlayer(index) {\n    this.list.splice(index, 1);\n  }\n\n  findPlayer(user) {\n    return this.list.findIndex(u => u.id === user.id);\n  }\n\n  destroy() {}\n}\n"]}