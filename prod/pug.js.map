{"version":3,"sources":["../src/pug.js"],"names":["addGameType","Pugs","_","gameName","noPlayers","noTeams","uid","isNaN","status","msg","discriminator","toLowerCase","pickingOrder","parseInt","newGameType","API","pushToDB","result","console","log","delGameType","args","deleteFromDB","joinGameType","user","PugList","length","id","isPartOfFilledPug","some","p","picking","list","u","map","game","g","joinStatus","pugProps","pug","Pug","addPlayer","cleanup","activeCount","error","leaveGameType","action","playerIndex","findPlayer","removePlayer","listAvailablePugs","forGame","withList","pickPugPlayer","reduce","acc","presentUser","filter","captain","activePug","team","captains","turn","res","pickPlayer","picked","addCaptain","captained","listCurrentPickings","pugs","curr","push","promoteAvailablePugs","captainTimer","setTimeout","present","i","pIndex","pugEventEmitter","emit","pugEvents","captainsReady","forEach","pick","findIndex","fillPug","index","splice","stopPug","clearTimeout","pickedPlayers","player","lastPlayerIndex","lastPlayerTeam","finished"],"mappings":"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","file":"pug.js","sourcesContent":["import API from './api';\nimport { getPickingOrder } from './helpers';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { getRandomInt } from './util';\nimport { pugEvents } from './constants';\nimport pugEventEmitter from './pugEvent';\n\nexport const addGameType = async (\n  [_, gameName, noPlayers, noTeams, uid],\n  Pugs\n) => {\n  try {\n    if (isNaN(noPlayers) || isNaN(noTeams) || !gameName || !uid)\n      return { status: false, msg: 'Invalid command' };\n\n    const discriminator = uid.toLowerCase();\n    if (Pugs[discriminator])\n      return { status: false, msg: 'Gametype already exists' };\n\n    const pickingOrder = getPickingOrder(\n      parseInt(noPlayers),\n      parseInt(noTeams)\n    );\n\n    if (!pickingOrder)\n      return { status: false, msg: 'Invalid No. of players/teams' };\n\n    const newGameType = {\n      gameName,\n      pickingOrder,\n      discriminator,\n      noPlayers: parseInt(noPlayers),\n      noTeams: parseInt(noTeams),\n    };\n\n    const result = await API.pushToDB('/Pugs', discriminator, newGameType);\n    return { ...result, msg: 'Gametype added' };\n  } catch (error) {\n    console.log(error);\n    return { status: false, msg: 'Something went wrong' };\n  }\n};\n\nexport const delGameType = async ([_, discriminator, ...args], Pugs) => {\n  //TODO: To remove existing references of this game type(?)\n  try {\n    if (!Pugs[discriminator])\n      return { status: false, msg: \"Gametype doesn't exist\" };\n\n    const result = await API.deleteFromDB('/Pugs', discriminator);\n    return { ...result, msg: 'Gametype removed' };\n  } catch (error) {\n    console.log(error);\n    return { status: false, msg: 'Something went wrong' };\n  }\n};\n\nexport const joinGameType = ([_, ...args], user, Pugs, PugList) => {\n  try {\n    if (args.length === 0)\n      return { status: false, result: [], msg: 'Invalid command' };\n\n    if (!user.id)\n      return { status: false, result: [], msg: 'No user was mentioned' };\n\n    const isPartOfFilledPug = Object.values(PugList).some(\n      p => p.picking && p.list.some(u => u.id === user.id)\n    );\n\n    if (isPartOfFilledPug)\n      return {\n        status: false,\n        result: [],\n        msg: 'Cannot join another pug when you are a part of a filled pug',\n      };\n\n    const result = args.map(g => {\n      const game = g.toLowerCase(); // game is basically the discriminator\n\n      if (!Pugs[game]) return { user, discriminator: game, joinStatus: -1 };\n\n      const pugProps = Pugs[game];\n      const pug = !PugList[game] ? new Pug(pugProps) : cloneDeep(PugList[game]);\n      const joinStatus = pug.addPlayer(user);\n\n      PugList[game] && PugList[game].cleanup(); // because we have cloned p and will no longer be using it\n      return {\n        pug,\n        user,\n        discriminator: pug.discriminator,\n        noPlayers: pug.noPlayers,\n        activeCount: pug.list.length,\n        joinStatus,\n      };\n    });\n    return { status: true, result };\n  } catch (error) {\n    console.log(error);\n    return { status: false, msg: 'Something went wrong' };\n  }\n};\n\nexport const leaveGameType = ([action, ...args], user, Pugs, PugList) => {\n  try {\n    if (action === 'lva') {\n      const result = Object.values(PugList).map(p => {\n        const pug = cloneDeep(p);\n        const playerIndex = pug.findPlayer(user);\n        if (playerIndex > -1) {\n          pug.removePlayer(playerIndex);\n\n          p.cleanup(); // because we have cloned p and will no longer be using it\n          return { pug, user, discriminator: pug.discriminator };\n        }\n        return {};\n      });\n      return { status: true, result };\n    } else {\n      if (args.length === 0)\n        return { status: false, result: [], msg: 'Invalid command' };\n\n      const result = args.map(g => {\n        const game = g.toLowerCase(); // game is basically the discriminator\n\n        if (!Pugs[game]) return {};\n        const pug = PugList[game] ? cloneDeep(PugList[game]) : null;\n        if (!pug) return {};\n\n        const playerIndex = pug.findPlayer(user);\n        if (playerIndex > -1) {\n          pug.removePlayer(playerIndex);\n\n          PugList[game].cleanup(); // because we have cloned p and will no longer be using it\n          return { pug, user, discriminator: pug.discriminator };\n        }\n        return {};\n      });\n      return { status: true, result };\n    }\n  } catch (error) {\n    console.log(error);\n    return { status: false, msg: 'Something went wrong' };\n  }\n};\n\n// TODO: Use constants for commands for better DX and maybe separate them in methods\nexport const listAvailablePugs = ([action, forGame, ...args], PugList) => {\n  try {\n    if (action === 'lsa') {\n      const result = Object.values(PugList).map(p => ({\n        discriminator: p.discriminator,\n        noPlayers: p.noPlayers,\n        list: [...p.list],\n        picking: p.picking,\n        withList: true,\n      }));\n      return { status: true, result };\n    } else {\n      if (!forGame) {\n        const result = Object.values(PugList).map(p => ({\n          discriminator: p.discriminator,\n          noPlayers: p.noPlayers,\n          list: [...p.list],\n          picking: p.picking,\n          withList: false,\n        }));\n        return { status: true, result };\n      }\n\n      const game = forGame.toLowerCase(); // game is basically the discriminator\n      if (!PugList[game]) return null;\n      const pug = PugList[game];\n      const result = [\n        {\n          discriminator: pug.discriminator,\n          noPlayers: pug.noPlayers,\n          list: [...pug.list],\n          picking: pug.picking,\n          withList: true,\n        },\n      ];\n      return { status: true, result };\n    }\n  } catch (error) {\n    console.log(error);\n    return { status: false, msg: 'Something went wrong' };\n  }\n};\n\nexport const pickPugPlayer = ([_, playerIndex], user, PugList) => {\n  try {\n    if (!playerIndex) return;\n    const { activePug, team } = Object.values(PugList).reduce(\n      (acc, p) => {\n        if (p.picking) {\n          const presentUser = p.list.filter(\n            u => u.id === user.id && u.captain !== null\n          );\n          if (presentUser[0]) {\n            acc.activePug = p;\n            acc.team = presentUser[0].team;\n          }\n        }\n        return acc;\n      },\n      { activePug: null, team: null }\n    );\n\n    if (!activePug) return { status: false, msg: `Invalid` };\n    if (activePug.captains.length !== activePug.noTeams)\n      return {\n        status: false,\n        msg: `Please wait for all captains to be picked`,\n      };\n\n    if (team !== activePug.pickingOrder[activePug.turn])\n      return { status: false, msg: `Please wait for your turn` };\n\n    if (playerIndex < 1 || playerIndex > activePug.list.length)\n      return { status: false, msg: `Invalid pick` };\n\n    const pug = cloneDeep(activePug);\n    PugList[pug.discriminator].cleanup();\n    const res = pug.pickPlayer(\n      parseInt(playerIndex) - 1,\n      pug.pickingOrder[pug.turn]\n    );\n    const result = { pug, ...res };\n    return { status: result.picked, result };\n  } catch (error) {\n    console.log(error);\n    return { status: false, msg: 'Something went wrong' };\n  }\n};\n\nexport const addCaptain = (user, PugList) => {\n  try {\n    const [activePug] = Object.values(PugList).filter(\n      p =>\n        p.picking &&\n        p.captains.length !== p.noTeams &&\n        p.list.some(u => u.id === user.id && u.captain === null)\n    );\n    if (!activePug) return { status: false, msg: `Invalid` };\n    const pug = activePug;\n    // Not cloning here because of timeout\n    const res = pug.addCaptain(user);\n    const result = { pug, ...res };\n    return { status: result.captained, result };\n  } catch (error) {\n    console.log(error);\n    return { status: false, msg: 'Something went wrong' };\n  }\n};\n\nexport const listCurrentPickings = ([_, discriminator], Pugs, PugList) => {\n  try {\n    if (\n      discriminator &&\n      (!Pugs[discriminator] ||\n        (!PugList[discriminator] || !PugList[discriminator].picking))\n    )\n      return {\n        status: false,\n        result: {},\n        msg: !Pugs[discriminator]\n          ? `There is no such pug **${discriminator}**`\n          : PugList[discriminator] && !PugList[discriminator]['picking']\n          ? `**${discriminator}** is not in picking mode`\n          : `**${discriminator}** is not in picking mode`,\n      };\n\n    const pugs = PugList[discriminator]\n      ? [PugList[discriminator]]\n      : Object.values(PugList).reduce((acc, curr) => {\n          if (curr.picking) acc.push(curr);\n          return acc;\n        }, []);\n\n    const result = { pugs };\n    return {\n      status: pugs.length,\n      msg: pugs.length ? `` : `There are no pugs in picking mode`,\n      result,\n    };\n  } catch (error) {\n    console.log(error);\n    return { status: false, msg: 'Something went wrong' };\n  }\n};\n\nexport const promoteAvailablePugs = ([_, discriminator], PugList) => {\n  if (\n    discriminator &&\n    (!PugList[discriminator] ||\n      PugList[discriminator].picking ||\n      PugList[discriminator].list.length === 0)\n  )\n    return { status: false, result: {}, msg: `` };\n\n  const pugs = PugList[discriminator]\n    ? [PugList[discriminator]]\n    : Object.values(PugList).reduce((acc, curr) => {\n        if (curr.list.length < curr.noPlayers) acc.push(curr);\n        return acc;\n      }, []);\n  const result = { pugs };\n  return {\n    status: pugs.length,\n    msg: ``,\n    result,\n  };\n};\n\nexport class Pug {\n  constructor({ discriminator, gameName, noPlayers, noTeams, pickingOrder }) {\n    this.discriminator = discriminator;\n    this.gameName = gameName;\n    this.noPlayers = noPlayers;\n    this.noTeams = noTeams;\n    this.pickingOrder = pickingOrder;\n    this.turn = 0;\n    this.picking = false;\n    this.list = [];\n    this.captains = [];\n    this.captainTimer = null;\n  }\n\n  fillPug() {\n    this.picking = true;\n    this.captainTimer = setTimeout(() => {\n      const present = this.captains.reduce((acc, _, i) => {\n        this.captains[i] ? (acc[i] = true) : null;\n        return acc;\n      }, {});\n\n      for (let i = 0; i < this.noTeams; i++) {\n        if (present[i]) continue;\n        while (1) {\n          const pIndex = getRandomInt(0, this.noPlayers - 1);\n          if (this.list[pIndex]['captain'] === null) {\n            this.list[pIndex]['captain'] = this.list[pIndex]['team'] = i;\n            this.list[pIndex]['pick'] = 0;\n            this.captains.push(this.list[pIndex]);\n            break;\n          }\n        }\n      }\n      pugEventEmitter.emit(pugEvents.captainsReady, this.discriminator);\n    }, 15000);\n  }\n\n  stopPug() {\n    this.picking = false;\n    this.turn = 0;\n    this.list.forEach(user => (user.captain = user.team = user.pick = null));\n    this.cleanup();\n  }\n\n  addPlayer(user) {\n    if (!this.picking) {\n      if (this.list.findIndex(u => u.id === user.id) > -1) return 2;\n      this.list.push({ team: null, captain: null, pick: null, ...user });\n      this.list.length === this.noPlayers ? this.fillPug() : null;\n      return 1;\n    }\n    return 0;\n  }\n\n  removePlayer(index) {\n    this.list.splice(index, 1);\n    if (this.picking) this.stopPug();\n  }\n\n  addCaptain(user) {\n    const pIndex = this.list.findIndex(u => u.id === user.id);\n    if (pIndex > -1) {\n      const length = this.captains.push(this.list[pIndex]);\n      this.list[pIndex]['captain'] = this.list[pIndex]['team'] = length - 1;\n      this.list[pIndex]['pick'] = 0;\n\n      if (this.captains.length === this.noTeams)\n        clearTimeout(this.captainTimer);\n\n      return {\n        captained: true,\n        team: length - 1,\n        captainsReady: this.captains.length === this.noTeams,\n      };\n    }\n    return { captained: false };\n  }\n\n  pickPlayer(pIndex, team) {\n    if (this.list[pIndex]['team'] === null) {\n      this.list[pIndex]['team'] = team;\n      this.turn += 1;\n      this.list[pIndex]['pick'] = this.turn;\n\n      const pickedPlayers = [{ player: this.list[pIndex], team }];\n      // last pick automatically goes\n      if (this.turn === this.pickingOrder.length - 1) {\n        const lastPlayerIndex = this.list.findIndex(u => u.team === null);\n        const lastPlayerTeam = this.pickingOrder[this.turn];\n\n        this.list[lastPlayerIndex]['team'] = lastPlayerTeam;\n        this.turn += 1;\n        this.list[lastPlayerIndex]['pick'] = this.turn;\n        // pug ended\n        this.picking = false;\n        pickedPlayers.push({\n          player: this.list[lastPlayerIndex],\n          team: lastPlayerTeam,\n        });\n      }\n      return { picked: true, pickedPlayers, picking: this.picking };\n    }\n    return {\n      picked: false,\n      pickedPlayers: this.list[pIndex],\n      finished: this.picking,\n    };\n  }\n\n  findPlayer(user) {\n    return this.list.findIndex(u => u.id === user.id);\n  }\n\n  cleanup() {\n    this.picking = false;\n    clearTimeout(this.captainTimer);\n  }\n}\n"]}