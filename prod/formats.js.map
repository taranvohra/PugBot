{"version":3,"sources":["../src/formats.js"],"names":["printServerStatus","info","players","richEmbed","Discord","RichEmbed","xServerQueryProps","remainingTime","teamScores","playerList","parseInt","numplayers","maxteams","minutes","seconds","timelimit","reduce","acc","curr","index","forEach","teamIndex","team","p","teamPlayers","length","addField","teams","spec","desc","mapname","maxplayers","footerText","host","port","setTitle","hostname","setColor","setDescription","setFooter","printGameServersList","cachedDB","name","printPugJoinStatus","statuses","joinStatus","user","discriminator","activeCount","noPlayers","nf","missed","toUpperCase","joined","aj","username","printPugLeaveStatus","isOffline","pug","left","list","nj","msg","printPugStatuses","i","picking","withList","base","u","broadCastFilledPugs","filledPugs","title","body","prev","player","id","footer","prefix","captainTimeout","broadCastDeadPugs","deadPugs","broadCastCaptainsReady","captains","pugCaptains","turn","captain","printPickStatus","pickedPlayers","picked","next","pickingOrder","pugTeams","Array","noTeams","fill","currTeams","sort","a","b","pick","activeTeams","printAddCaptainStatus","printPickingPugsStatus","pugs","printPromoteStatus"],"mappings":"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","file":"formats.js","sourcesContent":["import Discord from 'discord.js';\r\nimport {\r\n  getPlayerList,\r\n  getMinutesAndSeconds,\r\n  padNumberWithZero,\r\n  getTeamScores,\r\n  getTeamIndex,\r\n} from './helpers';\r\nimport { teams, prefix, captainTimeout } from './constants';\r\n\r\nexport const printServerStatus = ({ info, players }) => {\r\n  let richEmbed = new Discord.RichEmbed();\r\n\r\n  const xServerQueryProps = { remainingTime: null, teamScores: {} };\r\n  const playerList = getPlayerList(\r\n    players,\r\n    parseInt(info.numplayers) || 0,\r\n    !!info.maxteams\r\n  );\r\n\r\n  // If XServerQuery response, then some more coooooooooool stuff\r\n  if (info['xserverquery']) {\r\n    const { minutes, seconds } = getMinutesAndSeconds(\r\n      parseInt(info['remainingtime'])\r\n    );\r\n    const teamScores = getTeamScores(info, info.maxteams);\r\n\r\n    xServerQueryProps.remainingTime = `${\r\n      (minutes === parseInt(info.timelimit) && seconds === 0) ||\r\n      minutes < parseInt(info.timelimit)\r\n        ? '**Remaining Time:**'\r\n        : '**Overtime**:'\r\n    } ${padNumberWithZero(minutes)}:${padNumberWithZero(seconds)} \\n`;\r\n    xServerQueryProps.teamScores = Object.keys(teamScores).reduce(\r\n      (acc, curr) => {\r\n        const index = getTeamIndex(curr);\r\n        acc[index] = ` | Score - ${teamScores[curr]}`;\r\n        return acc;\r\n      },\r\n      []\r\n    );\r\n  }\r\n\r\n  Object.keys(playerList).forEach(team => {\r\n    const teamIndex = getTeamIndex(team);\r\n    const p = playerList[team];\r\n    const teamPlayers = p.reduce((acc, curr) => {\r\n      acc = acc + curr + ' ' + '\\n';\r\n      return acc;\r\n    }, '');\r\n    p.length > 0\r\n      ? richEmbed.addField(\r\n          team + (xServerQueryProps.teamScores[teamIndex] || ``),\r\n          teamPlayers,\r\n          team !== teams.spec\r\n        )\r\n      : '';\r\n  });\r\n\r\n  const desc =\r\n    `**Map:** ${info.mapname} \\n **Players:** ${info.numplayers}/${\r\n      info.maxplayers\r\n    } \\n ` + (xServerQueryProps.remainingTime || ``);\r\n  const footerText = `unreal://${info.host}:${info.port}`;\r\n\r\n  richEmbed.setTitle(info.hostname);\r\n  richEmbed.setColor('#838282');\r\n  richEmbed.setDescription(desc);\r\n  richEmbed.setFooter(footerText);\r\n  return richEmbed;\r\n};\r\n\r\nexport const printGameServersList = cachedDB => {\r\n  let richEmbed = new Discord.RichEmbed();\r\n\r\n  const { desc } = cachedDB.reduce(\r\n    (acc, curr, index) => {\r\n      acc.desc += `\\`${index + 1}\\`\\u00A0\\u00A0\\u00A0${curr.name}\\n`;\r\n      return acc;\r\n    },\r\n    {\r\n      desc: '',\r\n    }\r\n  );\r\n\r\n  richEmbed.setTitle(`IP\\u00A0\\u00A0\\u00A0Name`);\r\n  richEmbed.setColor('#838282');\r\n  richEmbed.setDescription(desc || 'No game servers added yet');\r\n  richEmbed.setFooter('To query, type .q ip');\r\n  return richEmbed;\r\n};\r\n\r\nexport const printPugJoinStatus = statuses => {\r\n  const { joined, missed, nf, aj, user } = statuses.reduce(\r\n    (acc, { joinStatus, user, discriminator, activeCount, noPlayers }) => {\r\n      switch (joinStatus) {\r\n        case -1:\r\n          acc.nf += `No pug found: **${discriminator}**\\n`;\r\n          break;\r\n        case 0:\r\n          acc.missed += `Sorry, **${discriminator.toUpperCase()}** is already filled\\n`;\r\n          break;\r\n        case 1:\r\n          acc.joined += `**${discriminator.toUpperCase()}** (${activeCount}/${noPlayers}) :small_blue_diamond: `;\r\n          break;\r\n        case 2:\r\n          acc.aj += `**${\r\n            user.username\r\n          }** has already joined **${discriminator.toUpperCase()}**`;\r\n          break;\r\n        default:\r\n          null;\r\n      }\r\n      acc.user = user;\r\n      return acc;\r\n    },\r\n    { joined: ``, missed: ``, nf: ``, aj: ``, user: null }\r\n  );\r\n  return `${\r\n    joined.length > 0\r\n      ? `${user.username} joined :small_blue_diamond: ${joined}`\r\n      : ``\r\n  } ${missed.length > 0 ? `\\n${missed}` : ``} ${\r\n    aj.length > 0 ? `\\n${aj}` : ``\r\n  } ${nf.length > 0 ? `\\n${nf}` : ``}`;\r\n};\r\n\r\nexport const printPugLeaveStatus = (statuses, isOffline) => {\r\n  const { left, nj, user } = statuses.reduce(\r\n    (acc, { pug, user, discriminator }) => {\r\n      if (pug) {\r\n        acc.left += `**${discriminator.toUpperCase()}** (${pug.list.length}/${\r\n          pug.noPlayers\r\n        })  `;\r\n        acc.user = user;\r\n      } else acc.nj = `Cannot leave pug(s) you haven't joined :smart:`;\r\n      return acc;\r\n    },\r\n    { user: null, left: ``, nj: `` }\r\n  );\r\n  const msg = `${\r\n    left.length > 0\r\n      ? `${user.username} left  ${left} ${\r\n          isOffline ? `because the person went offline` : ``\r\n        }`\r\n      : ``\r\n  }${nj.length > 0 ? `\\n${nj}` : ``}`;\r\n\r\n  return msg || `There are no pugs to leave`;\r\n};\r\n\r\nexport const printPugStatuses = statuses => {\r\n  const msg = statuses.reduce(\r\n    (acc, { discriminator, noPlayers, list, picking, withList }, i) => {\r\n      if (withList) {\r\n        const base = `**${discriminator.toUpperCase()}** :fire: Players (${\r\n          picking ? noPlayers : list.length\r\n        }/${noPlayers}):`;\r\n        const players = list.reduce((acc, u) => {\r\n          acc += `*${u.username}* `;\r\n          return acc;\r\n        }, ``);\r\n        acc += `${base} ${players}\\n`;\r\n        return acc;\r\n      } else {\r\n        acc += `${\r\n          i === 0 ? `:small_blue_diamond:` : ``\r\n        } **${discriminator.toUpperCase()}** (${\r\n          picking ? noPlayers : list.length\r\n        }/${noPlayers}) :small_blue_diamond: `;\r\n        return acc;\r\n      }\r\n    },\r\n    ``\r\n  );\r\n\r\n  return msg || `There are currently no pugs :FeelsBadMan: , try joining one!`;\r\n};\r\n\r\nexport const broadCastFilledPugs = filledPugs => {\r\n  return filledPugs.reduce((acc, curr) => {\r\n    const title = `**${curr.discriminator.toUpperCase()}** filled: `;\r\n    const body = curr.list.reduce((prev, player) => {\r\n      prev += `<@${player.id}> `;\r\n      return prev;\r\n    }, ``);\r\n    const footer = `Type \\`${prefix}captain\\` to become a captain. Random capts will be picked in ${captainTimeout /\r\n      1000} seconds`;\r\n    acc += `${title}\\n${body}\\n${footer}\\n`;\r\n    return acc;\r\n  }, ``);\r\n};\r\n\r\nexport const broadCastDeadPugs = deadPugs => {\r\n  return deadPugs.reduce((acc, curr, i) => {\r\n    acc += `${\r\n      i > 0 ? `\\n` : ``\r\n    } :joy_cat: **${curr.discriminator.toUpperCase()}** was stopped because **${\r\n      curr.user.username\r\n    }** left :joy_cat:`;\r\n    return acc;\r\n  }, ``);\r\n};\r\n\r\nexport const broadCastCaptainsReady = ({ list, captains }) => {\r\n  const pugCaptains = captains.reduce((acc, curr, index) => {\r\n    acc += `<@${curr.id}> is the captain for **${teams[`team_${index}`]}**\\n`;\r\n    return acc;\r\n  }, ``);\r\n  const turn = `<@${captains[0]['id']}> pick one for **${teams[`team_0`]}**`;\r\n  const { players } = list.reduce(\r\n    (acc, curr, index) => {\r\n      if (curr.captain === null)\r\n        acc.players += `**${index + 1}**) *${curr.username}*  `;\r\n      return acc;\r\n    },\r\n    { players: `Players: ` }\r\n  );\r\n  return `${pugCaptains}\\n${turn}\\n${players}`;\r\n};\r\n\r\nexport const printPickStatus = ({ pug, pickedPlayers, picking }) => {\r\n  const picked = pickedPlayers.reduce((acc, curr) => {\r\n    acc += `<@${curr.player.id}> was picked for **${\r\n      teams[`team_${curr.team}`]\r\n    }**\\n`;\r\n    return acc;\r\n  }, ``);\r\n\r\n  const next = pug.captains[pug.pickingOrder[pug.turn]];\r\n  const turn = picking\r\n    ? `<@${next.id}> pick one for **${teams[`team_${next.team}`]}**`\r\n    : `**Picking has finished**`;\r\n\r\n  const pugTeams = Array(pug.noTeams)\r\n    .fill(0)\r\n    .reduce((acc, curr, i) => {\r\n      acc[i] = `**${teams[`team_${i}`]}**: `;\r\n      return acc;\r\n    }, {});\r\n\r\n  const players = pug.list.reduce((acc, curr, index) => {\r\n    if (curr.team === null) acc += `**${index + 1}**) *${curr.username}*  `;\r\n    return acc;\r\n  }, `Players: `);\r\n\r\n  // This is object based\r\n  const currTeams = [...pug.list]\r\n    .sort((a, b) => a.pick - b.pick)\r\n    .reduce((acc, curr) => {\r\n      if (curr.team !== null) acc[curr.team] += `*${curr.username}*  `;\r\n      return acc;\r\n    }, pugTeams);\r\n\r\n  // This is taking that object based and appending all to a string\r\n  const activeTeams = Object.values(currTeams).reduce((acc, curr) => {\r\n    acc += `${curr}\\n`;\r\n    return acc;\r\n  }, ``);\r\n\r\n  return `${picked}\\n${turn}\\n${picking ? `${players}\\n` : ``}\\n${activeTeams}`;\r\n};\r\n\r\nexport const printAddCaptainStatus = (user, { pug, team }) => {\r\n  return `**${user.username}** became captain for **${teams[\r\n    `team_${team}`\r\n  ].toUpperCase()}**`;\r\n};\r\n\r\nexport const printPickingPugsStatus = pugs => {\r\n  return pugs.reduce((acc, pug) => {\r\n    const next = pug.captains[pug.pickingOrder[pug.turn]];\r\n    const turn = `<@${next.id}> pick one for **${teams[`team_${next.team}`]}**`;\r\n    const pugTeams = Array(pug.noTeams)\r\n      .fill(0)\r\n      .reduce((acc, curr, i) => {\r\n        acc[i] = `**${teams[`team_${i}`]}**: `;\r\n        return acc;\r\n      }, {});\r\n\r\n    const players = pug.list.reduce((acc, curr, index) => {\r\n      if (curr.team === null) acc += `**${index + 1}**) *${curr.username}*  `;\r\n      return acc;\r\n    }, `Players: `);\r\n\r\n    // This is object based\r\n    const currTeams = [...pug.list]\r\n      .sort((a, b) => a.pick - b.pick)\r\n      .reduce((acc, curr) => {\r\n        if (curr.team !== null) acc[curr.team] += `*${curr.username}*  `;\r\n        return acc;\r\n      }, pugTeams);\r\n\r\n    // This is taking that object based and appending all to a string\r\n    const activeTeams = Object.values(currTeams).reduce((acc, curr) => {\r\n      acc += `${curr}\\n`;\r\n      return acc;\r\n    }, ``);\r\n\r\n    acc += `${turn}\\n\\n${players}\\n\\n${activeTeams}\\n\\n`;\r\n    return acc;\r\n  }, ``);\r\n};\r\n\r\nexport const printPromoteStatus = pugs => {\r\n  return pugs.reduce((acc, curr) => {\r\n    acc += `**${curr.noPlayers -\r\n      curr.list\r\n        .length}** more needed for **${curr.discriminator.toUpperCase()}** \\n`;\r\n    return acc;\r\n  }, `@here \\n`);\r\n};\r\n"]}