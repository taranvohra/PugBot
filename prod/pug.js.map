{"version":3,"sources":["../src/pug.js"],"names":["addGameType","Pugs","_","gameName","noPlayers","noTeams","uid","isNaN","status","msg","discriminator","toLowerCase","pickingOrder","parseInt","newGameType","API","pushToDB","result","console","error","delGameType","args","deleteFromDB","joinGameType","user","PugList","length","id","isPartOfFilledPug","some","p","picking","list","u","map","game","g","joinStatus","pugProps","pug","Pug","addPlayer","cleanup","activeCount","leaveGameType","action","playerIndex","findPlayer","removePlayer","listAvailablePugs","forGame","withList","pickPugPlayer","reduce","acc","presentUser","filter","captain","activePug","team","captains","turn","res","pickPlayer","picked","addCaptain","captained","listCurrentPickings","filtering","pugs","curr","push","promoteAvailablePugs","captainTimer","setTimeout","present","i","pIndex","pugEventEmitter","emit","pugEvents","captainsReady","captainTimeout","findIndex","pick","fillPug","index","splice","stopPug","clearTimeout","pickedPlayers","player","lastPlayerIndex","lastPlayerTeam","finished","forEach"],"mappings":"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","file":"pug.js","sourcesContent":["import API from './api';\r\nimport { getPickingOrder } from './helpers';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport { getRandomInt } from './util';\r\nimport { pugEvents, prefix, captainTimeout } from './constants';\r\nimport pugEventEmitter from './pugEvent';\r\n\r\nexport const addGameType = async (\r\n  [_, gameName, noPlayers, noTeams, uid],\r\n  Pugs\r\n) => {\r\n  try {\r\n    if (isNaN(noPlayers) || isNaN(noTeams) || !gameName || !uid)\r\n      return { status: false, msg: 'Invalid command' };\r\n\r\n    const discriminator = uid.toLowerCase();\r\n    if (Pugs[discriminator])\r\n      return { status: false, msg: 'Gametype already exists' };\r\n\r\n    const pickingOrder = getPickingOrder(\r\n      parseInt(noPlayers),\r\n      parseInt(noTeams)\r\n    );\r\n\r\n    if (!pickingOrder)\r\n      return { status: false, msg: 'Invalid No. of players/teams' };\r\n\r\n    const newGameType = {\r\n      gameName,\r\n      pickingOrder,\r\n      discriminator,\r\n      noPlayers: parseInt(noPlayers),\r\n      noTeams: parseInt(noTeams),\r\n    };\r\n\r\n    const result = await API.pushToDB('/Pugs', discriminator, newGameType);\r\n    return { ...result, msg: 'Gametype added' };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { status: false, msg: 'Something went wrong' };\r\n  }\r\n};\r\n\r\nexport const delGameType = async ([_, discriminator, ...args], Pugs) => {\r\n  //TODO: To remove existing references of this game type(?)\r\n  try {\r\n    if (!Pugs[discriminator])\r\n      return { status: false, msg: \"Gametype doesn't exist\" };\r\n\r\n    const result = await API.deleteFromDB('/Pugs', discriminator);\r\n    return { ...result, msg: 'Gametype removed' };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { status: false, msg: 'Something went wrong' };\r\n  }\r\n};\r\n\r\nexport const joinGameType = ([_, ...args], user, Pugs, PugList) => {\r\n  try {\r\n    if (args.length === 0)\r\n      return { status: false, result: [], msg: 'Invalid command' };\r\n\r\n    if (!user.id)\r\n      return { status: false, result: [], msg: 'No user was mentioned' };\r\n\r\n    const isPartOfFilledPug = Object.values(PugList).some(\r\n      p => p.picking && p.list.some(u => u.id === user.id)\r\n    );\r\n\r\n    if (isPartOfFilledPug)\r\n      return {\r\n        status: false,\r\n        result: [],\r\n        msg: 'Cannot join another pug when you are a part of a filled pug',\r\n      };\r\n\r\n    const result = args.map(g => {\r\n      const game = g.toLowerCase(); // game is basically the discriminator\r\n\r\n      if (!Pugs[game]) return { user, discriminator: game, joinStatus: -1 };\r\n\r\n      const pugProps = Pugs[game];\r\n      const pug = !PugList[game] ? new Pug(pugProps) : cloneDeep(PugList[game]);\r\n      const joinStatus = pug.addPlayer(user);\r\n\r\n      PugList[game] && PugList[game].cleanup(); // because we have cloned p and will no longer be using it\r\n      return {\r\n        pug,\r\n        user,\r\n        discriminator: pug.discriminator,\r\n        noPlayers: pug.noPlayers,\r\n        activeCount: pug.list.length,\r\n        joinStatus,\r\n      };\r\n    });\r\n    return { status: true, result };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { status: false, msg: 'Something went wrong' };\r\n  }\r\n};\r\n\r\nexport const leaveGameType = ([action, ...args], user, Pugs, PugList) => {\r\n  try {\r\n    if (action === 'lva') {\r\n      const result = Object.values(PugList).map(p => {\r\n        const pug = cloneDeep(p);\r\n        const playerIndex = pug.findPlayer(user);\r\n        if (playerIndex > -1) {\r\n          pug.removePlayer(playerIndex);\r\n\r\n          p.cleanup(); // because we have cloned p and will no longer be using it\r\n          return { pug, user, discriminator: pug.discriminator };\r\n        }\r\n        return {};\r\n      });\r\n      return { status: true, result };\r\n    } else {\r\n      if (args.length === 0)\r\n        return { status: false, result: [], msg: 'Invalid command' };\r\n\r\n      const result = args.map(g => {\r\n        const game = g.toLowerCase(); // game is basically the discriminator\r\n\r\n        if (!Pugs[game]) return {};\r\n        const pug = PugList[game] ? cloneDeep(PugList[game]) : null;\r\n        if (!pug) return {};\r\n\r\n        const playerIndex = pug.findPlayer(user);\r\n        if (playerIndex > -1) {\r\n          pug.removePlayer(playerIndex);\r\n\r\n          PugList[game].cleanup(); // because we have cloned p and will no longer be using it\r\n          return { pug, user, discriminator: pug.discriminator };\r\n        }\r\n        return {};\r\n      });\r\n      return { status: true, result };\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { status: false, msg: 'Something went wrong' };\r\n  }\r\n};\r\n\r\n// TODO: Use constants for commands for better DX and maybe separate them in methods\r\nexport const listAvailablePugs = ([action, forGame, ...args], PugList) => {\r\n  try {\r\n    if (action === 'lsa') {\r\n      const result = Object.values(PugList).map(p => ({\r\n        discriminator: p.discriminator,\r\n        noPlayers: p.noPlayers,\r\n        list: [...p.list],\r\n        picking: p.picking,\r\n        withList: true,\r\n      }));\r\n      return { status: true, result };\r\n    } else {\r\n      if (!forGame) {\r\n        const result = Object.values(PugList).map(p => ({\r\n          discriminator: p.discriminator,\r\n          noPlayers: p.noPlayers,\r\n          list: [...p.list],\r\n          picking: p.picking,\r\n          withList: false,\r\n        }));\r\n        return { status: true, result };\r\n      }\r\n\r\n      const game = forGame.toLowerCase(); // game is basically the discriminator\r\n      if (!PugList[game]) return null;\r\n      const pug = PugList[game];\r\n      const result = [\r\n        {\r\n          discriminator: pug.discriminator,\r\n          noPlayers: pug.noPlayers,\r\n          list: [...pug.list],\r\n          picking: pug.picking,\r\n          withList: true,\r\n        },\r\n      ];\r\n      return { status: true, result };\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { status: false, msg: 'Something went wrong' };\r\n  }\r\n};\r\n\r\nexport const pickPugPlayer = ([_, playerIndex], user, PugList) => {\r\n  try {\r\n    if (!playerIndex) return;\r\n    const { activePug, team } = Object.values(PugList).reduce(\r\n      (acc, p) => {\r\n        if (p.picking) {\r\n          const presentUser = p.list.filter(\r\n            u => u.id === user.id && u.captain !== null\r\n          );\r\n          if (presentUser[0]) {\r\n            acc.activePug = p;\r\n            acc.team = presentUser[0].team;\r\n          }\r\n        }\r\n        return acc;\r\n      },\r\n      { activePug: null, team: null }\r\n    );\r\n\r\n    if (!activePug) return { status: false, msg: `Invalid` };\r\n    if (activePug.captains.length !== activePug.noTeams)\r\n      return {\r\n        status: false,\r\n        msg: `Please wait for all captains to be picked`,\r\n      };\r\n\r\n    if (team !== activePug.pickingOrder[activePug.turn])\r\n      return { status: false, msg: `Please wait for your turn` };\r\n\r\n    if (playerIndex < 1 || playerIndex > activePug.list.length)\r\n      return { status: false, msg: `Invalid pick` };\r\n\r\n    const pug = cloneDeep(activePug);\r\n    PugList[pug.discriminator].cleanup();\r\n    const res = pug.pickPlayer(\r\n      parseInt(playerIndex) - 1,\r\n      pug.pickingOrder[pug.turn]\r\n    );\r\n    const result = { pug, ...res };\r\n    return { status: result.picked, result };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { status: false, msg: 'Something went wrong' };\r\n  }\r\n};\r\n\r\nexport const addCaptain = (user, PugList) => {\r\n  try {\r\n    const [activePug] = Object.values(PugList).filter(\r\n      p =>\r\n        p.picking &&\r\n        p.captains.length !== p.noTeams &&\r\n        p.list.some(u => u.id === user.id && u.captain === null)\r\n    );\r\n    if (!activePug) return { status: false, msg: `Invalid` };\r\n    const pug = activePug;\r\n    // Not cloning here because of timeout\r\n    const res = pug.addCaptain(user);\r\n    const result = { pug, ...res };\r\n    return { status: result.captained, result };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { status: false, msg: 'Something went wrong' };\r\n  }\r\n};\r\n\r\nexport const listCurrentPickings = ([_, discriminator], Pugs, PugList) => {\r\n  try {\r\n    if (\r\n      discriminator &&\r\n      (!Pugs[discriminator] ||\r\n        (!PugList[discriminator] || !PugList[discriminator].picking))\r\n    )\r\n      return {\r\n        status: false,\r\n        result: {},\r\n        msg: !Pugs[discriminator]\r\n          ? `There is no such pug **${discriminator}**`\r\n          : PugList[discriminator] && !PugList[discriminator]['picking']\r\n          ? `**${discriminator}** is not in picking mode`\r\n          : `**${discriminator}** is not in picking mode`,\r\n      };\r\n\r\n    const filtering = PugList[discriminator] ? discriminator : 'all';\r\n    const pugs = Object.values(PugList).reduce((acc, curr) => {\r\n      if (\r\n        (curr.discriminator === filtering || filtering === 'all') &&\r\n        curr.picking &&\r\n        curr.captains.length === curr.noTeams\r\n      )\r\n        acc.push(curr);\r\n      return acc;\r\n    }, []);\r\n\r\n    const result = { pugs };\r\n    return {\r\n      status: pugs.length,\r\n      msg: pugs.length ? `` : `There are no pugs in picking mode`,\r\n      result,\r\n    };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { status: false, msg: 'Something went wrong' };\r\n  }\r\n};\r\n\r\nexport const promoteAvailablePugs = ([_, discriminator], PugList) => {\r\n  if (\r\n    discriminator &&\r\n    (!PugList[discriminator] ||\r\n      PugList[discriminator].picking ||\r\n      PugList[discriminator].list.length === 0)\r\n  )\r\n    return { status: false, result: {}, msg: `` };\r\n\r\n  const pugs = PugList[discriminator]\r\n    ? [PugList[discriminator]]\r\n    : Object.values(PugList).reduce((acc, curr) => {\r\n        if (curr.list.length < curr.noPlayers) acc.push(curr);\r\n        return acc;\r\n      }, []);\r\n  const result = { pugs };\r\n  return {\r\n    status: pugs.length,\r\n    msg: ``,\r\n    result,\r\n  };\r\n};\r\n\r\nexport class Pug {\r\n  constructor({ discriminator, gameName, noPlayers, noTeams, pickingOrder }) {\r\n    this.discriminator = discriminator;\r\n    this.gameName = gameName;\r\n    this.noPlayers = noPlayers;\r\n    this.noTeams = noTeams;\r\n    this.pickingOrder = pickingOrder;\r\n    this.turn = 0;\r\n    this.picking = false;\r\n    this.list = [];\r\n    this.captains = [];\r\n    this.captainTimer = null;\r\n  }\r\n\r\n  fillPug() {\r\n    this.picking = true;\r\n    this.captainTimer = setTimeout(() => {\r\n      const present = this.captains.reduce((acc, _, i) => {\r\n        this.captains[i] ? (acc[i] = true) : null;\r\n        return acc;\r\n      }, {});\r\n\r\n      for (let i = 0; i < this.noTeams; i++) {\r\n        if (present[i]) continue;\r\n        while (1) {\r\n          const pIndex = getRandomInt(0, this.noPlayers - 1);\r\n          if (this.list[pIndex]['captain'] === null) {\r\n            this.list[pIndex]['captain'] = this.list[pIndex]['team'] = i;\r\n            this.list[pIndex]['pick'] = 0;\r\n            this.captains.push(this.list[pIndex]);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      pugEventEmitter.emit(pugEvents.captainsReady, this.discriminator);\r\n    }, captainTimeout);\r\n  }\r\n\r\n  stopPug() {\r\n    this.cleanup();\r\n  }\r\n\r\n  addPlayer(user) {\r\n    if (!this.picking) {\r\n      if (this.list.findIndex(u => u.id === user.id) > -1) return 2;\r\n      this.list.push({ team: null, captain: null, pick: null, ...user });\r\n      this.list.length === this.noPlayers ? this.fillPug() : null;\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  removePlayer(index) {\r\n    this.list.splice(index, 1);\r\n    if (this.picking) this.stopPug();\r\n  }\r\n\r\n  addCaptain(user) {\r\n    const pIndex = this.list.findIndex(u => u.id === user.id);\r\n    if (pIndex > -1) {\r\n      const length = this.captains.push(this.list[pIndex]);\r\n      this.list[pIndex]['captain'] = this.list[pIndex]['team'] = length - 1;\r\n      this.list[pIndex]['pick'] = 0;\r\n\r\n      if (this.captains.length === this.noTeams)\r\n        clearTimeout(this.captainTimer);\r\n\r\n      return {\r\n        captained: true,\r\n        team: length - 1,\r\n        captainsReady: this.captains.length === this.noTeams,\r\n      };\r\n    }\r\n    return { captained: false };\r\n  }\r\n\r\n  pickPlayer(pIndex, team) {\r\n    if (this.list[pIndex]['team'] === null) {\r\n      this.list[pIndex]['team'] = team;\r\n      this.turn += 1;\r\n      this.list[pIndex]['pick'] = this.turn;\r\n\r\n      const pickedPlayers = [{ player: this.list[pIndex], team }];\r\n      // last pick automatically goes\r\n      if (this.turn === this.pickingOrder.length - 1) {\r\n        const lastPlayerIndex = this.list.findIndex(u => u.team === null);\r\n        const lastPlayerTeam = this.pickingOrder[this.turn];\r\n\r\n        this.list[lastPlayerIndex]['team'] = lastPlayerTeam;\r\n        this.turn += 1;\r\n        this.list[lastPlayerIndex]['pick'] = this.turn;\r\n        // pug ended\r\n        this.picking = false;\r\n        pickedPlayers.push({\r\n          player: this.list[lastPlayerIndex],\r\n          team: lastPlayerTeam,\r\n        });\r\n      }\r\n      return { picked: true, pickedPlayers, picking: this.picking };\r\n    }\r\n    return {\r\n      picked: false,\r\n      pickedPlayers: this.list[pIndex],\r\n      finished: this.picking,\r\n    };\r\n  }\r\n\r\n  findPlayer(user) {\r\n    return this.list.findIndex(u => u.id === user.id);\r\n  }\r\n\r\n  cleanup() {\r\n    this.picking = false;\r\n    this.turn = 0;\r\n    this.captains = [];\r\n    this.list.forEach(user => (user.captain = user.team = user.pick = null));\r\n    clearTimeout(this.captainTimer);\r\n  }\r\n}\r\n"]}