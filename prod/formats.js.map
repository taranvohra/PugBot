{"version":3,"sources":["../src/formats.js"],"names":["printServerStatus","info","players","richEmbed","Discord","RichEmbed","xServerQueryProps","remainingTime","teamScores","playerList","parseInt","numplayers","maxteams","minutes","seconds","timelimit","reduce","acc","curr","index","forEach","teamIndex","team","p","teamPlayers","length","addField","teams","spec","desc","mapname","maxplayers","footerText","host","port","setTitle","hostname","setColor","setDescription","setFooter","printServerList","cachedDB","name","printPugJoinStatus","statuses","joinStatus","user","discriminator","activeCount","noPlayers","nf","missed","toUpperCase","joined","aj","username","printPugLeaveStatus","msg","printPugStatuses","list","picking","withList","base","u"],"mappings":"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","file":"formats.js","sourcesContent":["import Discord from 'discord.js';\nimport {\n  getPlayerList,\n  getMinutesAndSeconds,\n  padNumberWithZero,\n  getTeamScores,\n  getTeamIndex,\n} from './helpers';\nimport { teams } from './constants';\n\nexport const printServerStatus = ({ info, players }) => {\n  let richEmbed = new Discord.RichEmbed();\n\n  const xServerQueryProps = { remainingTime: null, teamScores: {} };\n  const playerList = getPlayerList(\n    players,\n    parseInt(info.numplayers) || 0,\n    !!info.maxteams\n  );\n\n  // If XServerQuery response, then some more coooooooooool stuff\n  if (info['xserverquery']) {\n    const { minutes, seconds } = getMinutesAndSeconds(\n      parseInt(info['remainingtime'])\n    );\n    const teamScores = getTeamScores(info, info.maxteams);\n\n    xServerQueryProps.remainingTime = `${\n      (minutes === parseInt(info.timelimit) && seconds === 0) ||\n      minutes < parseInt(info.timelimit)\n        ? '**Remaining Time:**'\n        : '**Overtime**:'\n    } ${padNumberWithZero(minutes)}:${padNumberWithZero(seconds)} \\n`;\n    xServerQueryProps.teamScores = Object.keys(teamScores).reduce(\n      (acc, curr) => {\n        const index = getTeamIndex(curr);\n        acc[index] = ` | Score - ${teamScores[curr]}`;\n        return acc;\n      },\n      []\n    );\n  }\n\n  Object.keys(playerList).forEach(team => {\n    const teamIndex = getTeamIndex(team);\n    const p = playerList[team];\n    const teamPlayers = p.reduce((acc, curr) => {\n      acc = acc + curr + ' ' + '\\n';\n      return acc;\n    }, '');\n    p.length > 0\n      ? richEmbed.addField(\n          team + (xServerQueryProps.teamScores[teamIndex] || ``),\n          teamPlayers,\n          team !== teams.spec\n        )\n      : '';\n  });\n\n  const desc =\n    `**Map:** ${info.mapname} \\n **Players:** ${info.numplayers}/${\n      info.maxplayers\n    } \\n ` + (xServerQueryProps.remainingTime || ``);\n  const footerText = `unreal://${info.host}:${info.port}`;\n\n  richEmbed.setTitle(info.hostname);\n  richEmbed.setColor('#838282');\n  richEmbed.setDescription(desc);\n  richEmbed.setFooter(footerText);\n  return richEmbed;\n};\n\nexport const printServerList = cachedDB => {\n  let richEmbed = new Discord.RichEmbed();\n\n  const { desc } = cachedDB.reduce(\n    (acc, curr, index) => {\n      acc.desc += `\\`${index + 1}\\`\\u00A0\\u00A0\\u00A0${curr.name}\\n`;\n      return acc;\n    },\n    {\n      desc: '',\n    }\n  );\n\n  richEmbed.setTitle(`IP\\u00A0\\u00A0\\u00A0Name`);\n  richEmbed.setColor('#838282');\n  richEmbed.setDescription(desc);\n  richEmbed.setFooter('To query, type .q ip');\n  return richEmbed;\n};\n\nexport const printPugJoinStatus = statuses => {\n  const { joined, missed, nf, aj, user } = statuses.reduce(\n    (acc, { joinStatus, user, discriminator, activeCount, noPlayers }) => {\n      switch (joinStatus) {\n        case -1:\n          acc.nf += `No pug found: **${discriminator}**\\n`;\n          break;\n        case 0:\n          acc.missed += `Sorry, **${discriminator.toUpperCase()}** is already filled\\n`;\n          break;\n        case 1:\n          acc.joined += `:small_blue_diamond: **${discriminator.toUpperCase()}** (${activeCount}/${noPlayers})`;\n          break;\n        case 2:\n          acc.aj += `You have already joined **${discriminator.toUpperCase()}**`;\n          break;\n        default:\n          null;\n      }\n      acc.user = user;\n      return acc;\n    },\n    { joined: ``, missed: ``, nf: ``, aj: ``, user: null }\n  );\n  return `${joined.length > 0 ? `${user.username} joined ${joined}` : ``} ${\n    missed.length > 0 ? `\\n${missed}` : ``\n  } ${aj.length > 0 ? `\\n${aj}` : ``} ${nf.length > 0 ? `\\n${nf}` : ``}`;\n};\n\nexport const printPugLeaveStatus = statuses => {\n  const { msg, user } = statuses.reduce(\n    (acc, { user, discriminator }) => {\n      acc.msg += discriminator ? `**${discriminator.toUpperCase()}** ` : ``;\n      acc.user = user;\n      return acc;\n    },\n    { user: null, msg: `` }\n  );\n  return `${\n    msg.length > 0\n      ? `${user.username} left ${msg}`\n      : `Cannot leave a pug you haven't joined :smart: `\n  }`;\n};\n\nexport const printPugStatuses = statuses => {\n  return statuses.reduce(\n    (acc, { discriminator, noPlayers, list, picking, withList }) => {\n      if (withList) {\n        const base = `**${discriminator.toUpperCase()}** :fire: Players (${\n          picking ? noPlayers : list.length\n        }/${noPlayers}):`;\n        const players = list.reduce((acc, u) => {\n          acc += `*${u.username}* `;\n          return acc;\n        }, ``);\n        acc += `${base} ${players}\\n`;\n        return acc;\n      } else {\n        acc += `:small_blue_diamond: **${discriminator.toUpperCase()} (${\n          picking ? noPlayers : list.length\n        }/${noPlayers}) `;\n        return acc;\n      }\n    },\n    ``\n  );\n};\n"]}