{"version":3,"sources":["../src/helpers.js"],"names":["checkIfFinalPacket","packet","toString","split","some","s","filterFalsyValues","array","filter","Boolean","v","createObjectFromArray","reduce","acc","item","index","arr","toLowerCase","checkKeyExistenceFromIndex","cachedDB","getHostAndPortOfServerFromDB","host","port","getUIDFromIndex","length","id","undefined","createCacheFromSnapshot","cache","snapshot","forEach","child","key","val","checkIfRoleIsPrivileged","privilegedRoles","roles","find","x","name","r","getPlayerList","players","noOfPlayers","noOfTeams","playerList","teams","team_0","team_1","team_2","team_3","team_255","spec","i","cFlag","playerName","fixSpecialCharactersInName","push","team","parseInt","getTeamScores","info","maxTeams","teamScores","getPickingOrder","noPlayers","noTeams","pickingOrder","idx","shouldSwitch","remainingPlayers","replace","c","padNumberWithZero","number","getMinutesAndSeconds","seconds","time","minutes","getTeamIndex","findIndex","t","teamName"],"mappings":"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","file":"helpers.js","sourcesContent":["import { teams, privilegedRoles } from './constants';\n\n/**\n * @param {String} packet\n * @description Checks whether the packet is the last packet\n * @returns {Boolean}\n */\nexport const checkIfFinalPacket = packet =>\n  packet\n    .toString()\n    .split('\\\\')\n    .some(s => s === 'final');\n\n/**\n * @param  {Array} array\n * @description Filters out falsy values from array\n * @returns {Array}\n */\nexport const filterFalsyValues = array => array.filter(v => Boolean(v));\n\n/**\n * @param  {Array} array\n * @description Creates an object from an array by taking adjacent odd and even indexes\n * @returns {Object}\n */\nexport const createObjectFromArray = array => {\n  return array.reduce((acc, item, index, arr) => {\n    if (index % 2 === 0) acc[item.toLowerCase()] = arr[index + 1];\n    return acc;\n  }, {});\n};\n\n/**\n * @param {Object} cachedDB\n * @param {Number} index\n * @description Checks if Key exists\n */\nexport const checkKeyExistenceFromIndex = (cachedDB, index) =>\n  !!cachedDB[index - 1];\n\n/**\n * @param {Object} cachedDB\n * @param {Number} index\n * @description Obtains Host and Port of a server from cache\n */\nexport const getHostAndPortOfServerFromDB = (cachedDB, index) => [\n  cachedDB[index - 1].host,\n  cachedDB[index - 1].port,\n];\n\n/**\n * @param {Object} cachedDB\n * @param {Number} index\n * @description Obtains UID of a server from cache\n */\nexport const getUIDFromIndex = (cachedDB, index) =>\n  (cachedDB.length > 0 && cachedDB[index - 1].id) || undefined;\n\n/**\n * @param {Object} snapshot\n * @description returns a cache of database from firebase\n */\nexport const createCacheFromSnapshot = snapshot => {\n  let cache = {};\n  snapshot.forEach(child => {\n    cache[child.key] = child.val();\n  });\n  return cache;\n};\n\nexport const checkIfRoleIsPrivileged = roles =>\n  privilegedRoles.some(r => roles.find(x => x.name === r));\n\n/**\n * @param {Object} players\n * @param {Number} noOfPlayers\n * @param {Number} noOfTeams\n */\nexport const getPlayerList = (players, noOfPlayers, noOfTeams) => {\n  let playerList = {\n    [teams.team_0]: [],\n    [teams.team_1]: [],\n    [teams.team_2]: [],\n    [teams.team_3]: [],\n    [teams.team_255]: [],\n    [teams.spec]: [],\n  };\n\n  for (let i = 0; i < noOfPlayers; i++) {\n    const cFlag =\n      !!players[`countryc_${i}`] && players[`countryc_${i}`] !== 'none'\n        ? `:flag_${players[`countryc_${i}`]}:`\n        : `:flag_white:`;\n\n    const playerName =\n      cFlag + ' ' + fixSpecialCharactersInName(players[`player_${i}`]);\n    if (players[`mesh_${i}`] === 'Spectator') {\n      playerList[teams.spec].push(playerName);\n      continue;\n    }\n\n    if (noOfTeams > 0) {\n      const team = parseInt(players[`team_${i}`]);\n      playerList[Object.values(teams)[team]].push(playerName);\n    } else playerList[teams.team_255].push(playerName);\n  }\n  return playerList;\n};\n\nexport const getTeamScores = (info, maxTeams) => {\n  let teamScores = {\n    [teams.team_0]: [],\n    [teams.team_1]: [],\n    [teams.team_2]: [],\n    [teams.team_3]: [],\n  };\n\n  for (let i = 0; i < maxTeams; i++) {\n    teamScores[Object.values(teams)[i]] = info[`teamscore_${i}`];\n  }\n  return teamScores;\n};\n\n/**\n * @param {Number} noOfPlayers\n * @param {Number} noOfTeams\n * @description Obtains the picking order for pug. Returns 0 if invalid props\n */\nexport const getPickingOrder = (noPlayers, noTeams) => {\n  if (noPlayers < noTeams || noPlayers % noTeams !== 0) return 0;\n  const pickingOrder = [];\n  let idx = 0;\n  let shouldSwitch = -1;\n  let remainingPlayers = noPlayers - noTeams; // because captainsss\n  while (remainingPlayers > 0) {\n    pickingOrder.push(idx);\n    shouldSwitch = (shouldSwitch + 1) % 2;\n    idx = shouldSwitch === 0 ? (idx + 1) % noTeams : idx;\n    remainingPlayers--;\n  }\n  return pickingOrder;\n};\n\nexport const fixSpecialCharactersInName = name =>\n  name.replace(/(\\*|`|:)/g, c => '\\\\' + c);\n\nexport const padNumberWithZero = number =>\n  number > -1 && number < 10 ? `0${number}` : `${number}`;\n\nexport const getMinutesAndSeconds = time => {\n  const seconds = time % 60;\n  const minutes = (time - seconds) / 60;\n  return {\n    seconds,\n    minutes,\n  };\n};\n\nexport const getTeamIndex = teamName =>\n  Object.values(teams).findIndex(t => t === teamName);\n"]}