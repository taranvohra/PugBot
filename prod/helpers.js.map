{"version":3,"sources":["../src/helpers.js"],"names":["checkIfFinalPacket","packet","toString","split","some","s","filterFalsyValues","array","filter","Boolean","v","createObjectFromArray","reduce","acc","item","index","arr","toLowerCase","checkKeyExistenceFromIndex","cachedDB","getHostAndPortOfServerFromDB","host","port","getUIDFromIndex","length","id","undefined","createCacheFromSnapshot","cache","snapshot","forEach","child","key","val","checkIfRoleIsPrivileged","privilegedRoles","roles","find","x","name","r","getPlayerList","players","noOfPlayers","noOfTeams","playerList","teams","team_0","team_1","team_2","team_3","team_255","spec","i","cFlag","playerName","fixSpecialCharactersInName","push","team","parseInt","getTeamScores","info","maxTeams","teamScores","getPickingOrder","noPlayers","noTeams","idx","pickingOrder","remainingPlayers","wholeRound","reverse","replace","c","padNumberWithZero","number","getMinutesAndSeconds","seconds","time","minutes","getTeamIndex","findIndex","t","teamName"],"mappings":"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","file":"helpers.js","sourcesContent":["import { teams, privilegedRoles } from './constants';\r\n\r\n/**\r\n * @param {String} packet\r\n * @description Checks whether the packet is the last packet\r\n * @returns {Boolean}\r\n */\r\nexport const checkIfFinalPacket = packet =>\r\n  packet\r\n    .toString()\r\n    .split('\\\\')\r\n    .some(s => s === 'final');\r\n\r\n/**\r\n * @param  {Array} array\r\n * @description Filters out falsy values from array\r\n * @returns {Array}\r\n */\r\nexport const filterFalsyValues = array => array.filter(v => Boolean(v));\r\n\r\n/**\r\n * @param  {Array} array\r\n * @description Creates an object from an array by taking adjacent odd and even indexes\r\n * @returns {Object}\r\n */\r\nexport const createObjectFromArray = array => {\r\n  return array.reduce((acc, item, index, arr) => {\r\n    if (index % 2 === 0) acc[item.toLowerCase()] = arr[index + 1];\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\n/**\r\n * @param {Object} cachedDB\r\n * @param {Number} index\r\n * @description Checks if Key exists\r\n */\r\nexport const checkKeyExistenceFromIndex = (cachedDB, index) =>\r\n  !!cachedDB[index - 1];\r\n\r\n/**\r\n * @param {Object} cachedDB\r\n * @param {Number} index\r\n * @description Obtains Host and Port of a server from cache\r\n */\r\nexport const getHostAndPortOfServerFromDB = (cachedDB, index) => [\r\n  cachedDB[index - 1].host,\r\n  cachedDB[index - 1].port,\r\n];\r\n\r\n/**\r\n * @param {Object} cachedDB\r\n * @param {Number} index\r\n * @description Obtains UID of a server from cache\r\n */\r\nexport const getUIDFromIndex = (cachedDB, index) =>\r\n  (cachedDB.length > 0 && cachedDB[index - 1].id) || undefined;\r\n\r\n/**\r\n * @param {Object} snapshot\r\n * @description returns a cache of database from firebase\r\n */\r\nexport const createCacheFromSnapshot = snapshot => {\r\n  let cache = {};\r\n  snapshot.forEach(child => {\r\n    cache[child.key] = child.val();\r\n  });\r\n  return cache;\r\n};\r\n\r\nexport const checkIfRoleIsPrivileged = roles =>\r\n  privilegedRoles.some(r => roles.find(x => x.name === r));\r\n\r\n/**\r\n * @param {Object} players\r\n * @param {Number} noOfPlayers\r\n * @param {Number} noOfTeams\r\n */\r\nexport const getPlayerList = (players, noOfPlayers, noOfTeams) => {\r\n  let playerList = {\r\n    [teams.team_0]: [],\r\n    [teams.team_1]: [],\r\n    [teams.team_2]: [],\r\n    [teams.team_3]: [],\r\n    [teams.team_255]: [],\r\n    [teams.spec]: [],\r\n  };\r\n\r\n  for (let i = 0; i < noOfPlayers; i++) {\r\n    const cFlag =\r\n      !!players[`countryc_${i}`] && players[`countryc_${i}`] !== 'none'\r\n        ? `:flag_${players[`countryc_${i}`]}:`\r\n        : `:flag_white:`;\r\n\r\n    const playerName =\r\n      cFlag + ' ' + fixSpecialCharactersInName(players[`player_${i}`]);\r\n    if (players[`mesh_${i}`] === 'Spectator') {\r\n      playerList[teams.spec].push(playerName);\r\n      continue;\r\n    }\r\n\r\n    if (noOfTeams > 0) {\r\n      const team = parseInt(players[`team_${i}`]);\r\n      playerList[Object.values(teams)[team]].push(playerName);\r\n    } else playerList[teams.team_255].push(playerName);\r\n  }\r\n  return playerList;\r\n};\r\n\r\nexport const getTeamScores = (info, maxTeams) => {\r\n  let teamScores = {\r\n    [teams.team_0]: [],\r\n    [teams.team_1]: [],\r\n    [teams.team_2]: [],\r\n    [teams.team_3]: [],\r\n  };\r\n\r\n  for (let i = 0; i < maxTeams; i++) {\r\n    teamScores[Object.values(teams)[i]] = info[`teamscore_${i}`];\r\n  }\r\n  return teamScores;\r\n};\r\n\r\n/**\r\n * @param {Number} noOfPlayers\r\n * @param {Number} noOfTeams\r\n * @description Obtains the picking order for pug. Returns 0 if invalid props. Returns [-1] for duels\r\n */\r\nexport const getPickingOrder = (noPlayers, noTeams) => {\r\n  if (noPlayers < noTeams || noPlayers % noTeams !== 0) return 0;\r\n  let idx = 0;\r\n  let pickingOrder = [];\r\n  let remainingPlayers = noPlayers - noTeams; // because captainsss\r\n  let wholeRound = []; // when all teams have got to pick atleast once\r\n  while (remainingPlayers > 0) {\r\n    pickingOrder.push(idx);\r\n    wholeRound.push(idx);\r\n    if (wholeRound.length === noTeams) {\r\n      pickingOrder = [...pickingOrder, ...wholeRound.reverse()];\r\n      wholeRound = [];\r\n      idx = 0;\r\n      remainingPlayers = remainingPlayers - noTeams - 1;\r\n    } else {\r\n      idx++;\r\n      remainingPlayers--;\r\n    }\r\n  }\r\n  return pickingOrder.length > 0 ? pickingOrder : [-1];\r\n};\r\n\r\nexport const fixSpecialCharactersInName = name =>\r\n  name.replace(/(\\*|`|:)/g, c => '\\\\' + c);\r\n\r\nexport const padNumberWithZero = number =>\r\n  number > -1 && number < 10 ? `0${number}` : `${number}`;\r\n\r\nexport const getMinutesAndSeconds = time => {\r\n  const seconds = time % 60;\r\n  const minutes = (time - seconds) / 60;\r\n  return {\r\n    seconds,\r\n    minutes,\r\n  };\r\n};\r\n\r\nexport const getTeamIndex = teamName =>\r\n  Object.values(teams).findIndex(t => t === teamName);\r\n"]}